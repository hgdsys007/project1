<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.langlang.health.news.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.langlang.health.news.entity.Article">
        <id column="cid" jdbcType="INTEGER" property="cid" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />


        <result column="author_id" jdbcType="INTEGER" property="authorId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="categories" jdbcType="VARCHAR" property="categories" />
        <result column="hits" jdbcType="INTEGER" property="hits" />
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum" />
        <result column="allow_comment" jdbcType="BIT" property="allowComment" />
        <result column="allow_ping" jdbcType="BIT" property="allowPing" />
        <result column="allow_feed" jdbcType="BIT" property="allowFeed" />
        <result column="stick" jdbcType="INTEGER" property="stick" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.langlang.health.news.entity.Article">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    cid, title, slug,   author_id, type, status, tags, categories, hits,
    comments_num, allow_comment, allow_ping, allow_feed , stick
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>

    <!--查询主页的文章列表-->
    <select id="getArticleList" parameterType="Article" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        ,(select u.realname from sys_user u where u.id=author_id) as author
        from acc_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <select id="selectByExample" parameterType="Article" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from acc_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="getArticlesById" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from acc_article
        where cid = #{cid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from acc_article
    where cid = #{cid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="Article">
        delete from acc_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="Article" useGeneratedKeys="true" keyProperty="cid">
    insert into acc_article (cid, title, slug,
      author_id,
      type, status, tags,
      categories, hits, comments_num,
      allow_comment, allow_ping, allow_feed,
      content)
    values (#{cid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
      #{authorId,jdbcType=INTEGER},
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
      #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
      #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="Article" useGeneratedKeys="true" keyProperty="cid">
        insert into acc_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="slug != null">
                slug,
            </if>


            <if test="authorId != null">
                author_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="categories != null">
                categories,
            </if>
            <if test="hits != null">
                hits,
            </if>
            <if test="commentsNum != null">
                comments_num,
            </if>
            <if test="allowComment != null">
                allow_comment,
            </if>
            <if test="allowPing != null">
                allow_ping,
            </if>
            <if test="allowFeed != null">
                allow_feed,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                #{slug,jdbcType=VARCHAR},
            </if>


            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.langlang.health.news.entity.Article" resultType="java.lang.Long">
        select count(*) from acc_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update acc_article
        <set>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.slug != null">
                slug = #{record.slug,jdbcType=VARCHAR},
            </if>


            <if test="record.authorId != null">
                author_id = #{record.authorId,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.tags != null">
                tags = #{record.tags,jdbcType=VARCHAR},
            </if>
            <if test="record.categories != null">
                categories = #{record.categories,jdbcType=VARCHAR},
            </if>
            <if test="record.hits != null">
                hits = #{record.hits,jdbcType=INTEGER},
            </if>
            <if test="record.commentsNum != null">
                comments_num = #{record.commentsNum,jdbcType=INTEGER},
            </if>
            <if test="record.allowComment != null">
                allow_comment = #{record.allowComment,jdbcType=BIT},
            </if>
            <if test="record.allowPing != null">
                allow_ping = #{record.allowPing,jdbcType=BIT},
            </if>
            <if test="record.allowFeed != null">
                allow_feed = #{record.allowFeed,jdbcType=BIT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update acc_article
        set cid = #{record.cid,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        slug = #{record.slug,jdbcType=VARCHAR},


        author_id = #{record.authorId,jdbcType=INTEGER},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        categories = #{record.categories,jdbcType=VARCHAR},
        hits = #{record.hits,jdbcType=INTEGER},
        comments_num = #{record.commentsNum,jdbcType=INTEGER},
        allow_comment = #{record.allowComment,jdbcType=BIT},
        allow_ping = #{record.allowPing,jdbcType=BIT},
        allow_feed = #{record.allowFeed,jdbcType=BIT},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update acc_article
        set cid = #{record.cid,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        slug = #{record.slug,jdbcType=VARCHAR},



        author_id = #{record.authorId,jdbcType=INTEGER},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        categories = #{record.categories,jdbcType=VARCHAR},
        hits = #{record.hits,jdbcType=INTEGER},
        comments_num = #{record.commentsNum,jdbcType=INTEGER},
        allow_comment = #{record.allowComment,jdbcType=BIT},
        allow_ping = #{record.allowPing,jdbcType=BIT},
        allow_feed = #{record.allowFeed,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.langlang.health.news.entity.Article">
        update acc_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>


            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.langlang.health.news.entity.Article">
    update acc_article
    set title = #{title,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},


      author_id = #{authorId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      categories = #{categories,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      comments_num = #{commentsNum,jdbcType=INTEGER},
      allow_comment = #{allowComment,jdbcType=BIT},
      allow_ping = #{allowPing,jdbcType=BIT},
      allow_feed = #{allowFeed,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where cid = #{cid,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.langlang.health.news.entity.Article">
    update acc_article
    set title = #{title,jdbcType=VARCHAR},
      slug = #{slug,jdbcType=VARCHAR},


      author_id = #{authorId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      categories = #{categories,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      comments_num = #{commentsNum,jdbcType=INTEGER},
      allow_comment = #{allowComment,jdbcType=BIT},
      allow_ping = #{allowPing,jdbcType=BIT},
      allow_feed = #{allowFeed,jdbcType=BIT}
    where cid = #{cid,jdbcType=INTEGER}
  </update>


    <resultMap id="archiveBoMap" type="com.langlang.health.news.entity.Article">
        <id column="date" property="date"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="findReturnArchiveBo" resultMap="archiveBoMap">
    select  count(*) as count from acc_article where type = 'text' and status = 'publish' group by date order by date desc
  </select>


    <select id="findByCatalog" resultMap="BaseResultMap" parameterType="Integer">
    select a.*
    from acc_article a left join t_relationships b on a.cid = b.cid
    where b.mid = #{value} and a.status = 'publish' and a.type = 'text'

  </select>
</mapper>